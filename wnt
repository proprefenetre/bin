#!/usr/bin/env python
# coding: utf-8

import argparse
from bs4 import BeautifulSoup
import re
import readline
from shutil import get_terminal_size
import sys
import textwrap as tw
import urllib.parse as up
from urllib.request import urlopen
from urllib.error import HTTPError


class Lemma:

    WNT_URL = "http://gtb.ivdnt.org/iWDB/search?actie=results&conc=true&xmlerror=true&lemmodern={}&domein=0&conc=true&wdb=wnt&sensitive=false"

    def __init__(self, word):
        self.word = word

    def _query(self):
        return urlopen(self.WNT_URL.format(up.quote(self.word)))

    def search(self):
        results = []
        soup = BeautifulSoup(self._query(), "lxml")
        for r in soup.find_all("result"):
            attrs = r.attrs
            if "subentry" in attrs:
                continue
            else:
                try:
                    ws, g = attrs["woordsoort"].split("(")
                except:
                    continue
                # results.append((attrs["lemma"].lower(), re.sub('<[^<]+?>', '', attrs["betekenis"]).strip(), ws, g.strip(")")))
                results.append((attrs["lemma"].lower(), attrs["betekenis"], ws, g.strip(")")))
        return results


def printr(results):
    for r in results:
        print(f"\033[1m{r[0]}\033[0m: {r[2]}, {r[3]}\n")


def interact():

    while True:
        try:
            query = input("> ")
        except (EOFError, KeyboardInterrupt):
            print("Closing session")
            sys.exit(0)
        else:
            printr(Lemma(query).search())


def run():
    parser = argparse.ArgumentParser(description="Look up words in WNT")
    parser.add_argument("word", metavar="WORD", type=str, nargs='*')
    parser.add_argument("-i", "--interactive", action="store_true", help="run \ interactively")

    args = vars(parser.parse_args()) # returns a dictionary

    if args['interactive']:
        interact()
    elif not args['word']:
        parser.print_help()
        return
    else:
        printr(Lemma(args['word'][0]).search())


if __name__ == "__main__":
    run()
