#!/usr/bin/env python
# coding: utf-8

import argparse
from bs4 import BeautifulSoup
import re
import readline
import sys
import textwrap as tw
import urllib.parse as up
from urllib.request import urlopen
from urllib.error import HTTPError


class Word:
    _fields= ["word", "category", "gender", "sense"]
    def __init__(self, *args):
        if len(args) != len(self._fields):
            raise TypeError('Expected {} arguments'.format(len(self._fields)))
        for name, value in zip(self._fields, args):
            setattr(self, name, value)

    def __str__(self):
        sense = "\n          ".join(tw.wrap(self.sense, 80))
        return f"""
lemma: {self.word}
category: {self.category}
gender:   {self.gender}
sense:    {sense}
"""


WNT_URL = "http://wnt.inl.nl/iWDB/search?actie=results&wdb=wnt&xmlerror=true&lemmodern={}&domein=0&conc=true&sensitive=false"

def results(lemma):
    lemma = up.quote(lemma)
    try:
        resp = urlopen(WNT_URL.format(lemma))
        soup = BeautifulSoup(resp, 'lxml')
    except HTTPError:
        print(f"\nusing url: \"{WNT_URL.format(lemma)}\"")
        raise 
    return soup.find_all("result")


def italics(mobj):
    return f"\033[3m{mobj.group(2)}\033[m"


def search(lemma):
    meanings = []
    for r in results(lemma):
        pos = r.get("woordsoort").split("(")
        if len(pos) < 2:
            cat, gen = pos[0], "n.v.t."
        else:
            try:
                cat, gen = pos
            except:
                print(f"\npos: {pos}\n url: {WNT_URL.format(up.quote(lemma))}")
                raise

        sense = re.sub(r"<(?P<tag>.*?)>(.*?)</(?P=tag)>", italics, r.get("betekenis").strip())
        sense = re.sub(r"(<.*?>)+[\w[\] ]+(<.*?>)+", " (zie verder wnt.inl.nl)", sense)
        w = Word(lemma, cat, gen.strip(")"), sense)
        meanings.append(w)
    return meanings


def lookup(lemma):
    print(f"\033[4m{lemma}\033[0m")
    for m in search(lemma):
        if m.category:
            print(m)


def interact():
    while True:
        try:
            lemma = input("> ")
        except (EOFError, KeyboardInterrupt):
            print("Closing session")
            sys.exit(0)
        if not lemma:
            continue
        lookup(lemma)


def run():
    parser = argparse.ArgumentParser(description='Look up words in WNT')
    parser.add_argument('word', metavar='WORD', type=str, nargs='*')
    parser.add_argument('-i', '--interactive', action='store_true', help='run \ interactively')

    args = vars(parser.parse_args()) # returns a dictionary

    if args['interactive']:
        interact()
    elif not args['word']:
        parser.print_help()
        return
    else:
        lookup(args['word'])


if __name__ == "__main__":
    run()
